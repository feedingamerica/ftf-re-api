[
  {
    "model": "api.DataDefinitionType",
    "pk": 1,
    "fields": {
      "name": "integer"
    }
  },
  {
    "model": "api.DataDefinitionType",
    "pk": 2,
    "fields": {
      "name": "json"
    }
  },
  {
    "model": "api.DataDefinitionType",
    "pk": 3,
    "fields": {
      "name": "float"
    }
  },
  {
    "model": "api.ControlType",
    "pk": 1,
    "fields": {
      "name": "Is Grocery Service",
      "notes": "dummy_is_grocery_service == 1 dim_service_types.dummy_is_grocery_service = 1"
    }
  },
  {
    "model": "api.ControlType",
    "pk": 2,
    "fields": {
      "name": "Prepack & Choice Only",
      "notes": "SC 10 & 15 dim_service_types.service_category_code IN (10, 15)"
    }
  },
  {
    "model": "api.ControlType",
    "pk": 3,
    "fields": {
      "name": "Produce Only",
      "notes": "SC 20 dim_service_types.service_category_code IN (20)"
    }
  },
  {
    "model": "api.ControlType",
    "pk": 4,
    "fields": {
      "name": "Everything",
      "notes": "Unrestricted NULL"
    }
  },
  {
    "model": "api.ControlType",
    "pk": 5,
    "fields": {
      "name": "TEFAP",
      "notes": "Single service type - TEFAP services only"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 1,
    "fields": {
      "type": "Hierarchy",
      "name": "Event",
      "field_reference": "event_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 2,
    "fields": {
      "type": "Hierarchy",
      "name": "Location",
      "field_reference": "loc_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 3,
    "fields": {
      "type": "Hierarchy",
      "name": "Organization",
      "field_reference": "org_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 4,
    "fields": {
      "type": "Hierarchy",
      "name": "County",
      "field_reference": "cnty_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 5,
    "fields": {
      "type": "Hierarchy",
      "name": "Foodbank",
      "field_reference": "fb_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 6,
    "fields": {
      "type": "Hierarchy",
      "name": "State",
      "field_reference": "state_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 7,
    "fields": {
      "type": "Hierarchy",
      "name": "Multi-Event",
      "field_reference": "ra_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 8,
    "fields": {
      "type": "Hierarchy",
      "name": "Multi-Location",
      "field_reference": "cluster_id"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 9,
    "fields": {
      "type": "Geography",
      "name": "State",
      "field_reference": "fips_state"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 10,
    "fields": {
      "type": "Geography",
      "name": "County",
      "field_reference": "fips_cnty"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 11,
    "fields": {
      "type": "Geography",
      "name": "Tract",
      "field_reference": "fips_tract"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 12,
    "fields": {
      "type": "Geography",
      "name": "Zip Code Area",
      "field_reference": "fips_zcta"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 13,
    "fields": {
      "type": "Geography",
      "name": "State Congressional District",
      "field_reference": "fips_sldl"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 14,
    "fields": {
      "type": "Geography",
      "name": "State Senate",
      "field_reference": "fips_sldu"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 15,
    "fields": {
      "type": "Geography",
      "name": "Federal Congressional District",
      "field_reference": "fips_cd"
    }
  },
  {
    "model": "api.ReportScope",
    "pk": 16,
    "fields": {
      "type": "Geography",
      "name": "School District",
      "field_reference": "fips_unsd"
    }
  },
  {
    "model": "api.ReportingDictionary",
    "pk": 1,
    "fields": {
      "name": "Default Reporting Engine Output",
      "definition": "80+ data definitions"
    }
  },
  {
    "model": "api.ReportingDictionary",
    "pk": 2,
    "fields": {
      "name": "State AddIn - Ohio",
      "definition": "15 data points (full Ohio Grid)"
    }
  },
  {
    "model": "api.ReportingDictionary",
    "pk": 3,
    "fields": {
      "name": "Food Bank Add-in - MOFC",
      "definition": "4 unique #s"
    }
  },
  {
    "model": "api.ReportingDictionary",
    "pk": 4,
    "fields": {
      "name": "Food Bank Add-in - Virginia Peninsula",
      "definition": "7 unique data definitions"
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 1,
    "fields": {
      "name": "service_total",
      "definition_public": "big_numbers",
      "calculation_notes": "Count of fact-services entries",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 2,
    "fields": {
      "name": "undup_hh_total",
      "definition_public": "big_numbers",
      "calculation_notes": "Count distinct of research_family_key from fact_services entries",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 3,
    "fields": {
      "name": "undup_indv_total",
      "definition_public": "big_numbers",
      "calculation_notes": "Count distinct of research_member_key from fact_service_members entries",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 4,
    "fields": {
      "name": "services_per_uhh_avg",
      "definition_public": "big_numbers",
      "calculation_notes": "Quotient of services_total divided by undup_hh_total",
      "data_definition_type_id": 3
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 5,
    "fields": {
      "name": "hh_wminor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Count of fact_services entries where served_children > 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 6,
    "fields": {
      "name": "hh_wominor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Count of fact_services entries where served_children == 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 7,
    "fields": {
      "name": "hh_total",
      "definition_public": "addin_ohio",
      "calculation_notes": "Count of fact-services entries",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 8,
    "fields": {
      "name": "indv_sen_hh_wminor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_seniors where served_children > 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 9,
    "fields": {
      "name": "indv_sen_hh_wominor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_seniors where served_children == 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 10,
    "fields": {
      "name": "indv_sen_total",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_seniors",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 11,
    "fields": {
      "name": "indv_adult_hh_wminor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_adult where served_children > 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 12,
    "fields": {
      "name": "indv_adult_hh_wominor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_adult where served_children == 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 13,
    "fields": {
      "name": "indv_adult_total",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_adult",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 14,
    "fields": {
      "name": "indv_child_hh_wminor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_children where served_children > 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 15,
    "fields": {
      "name": "indv_child_hh_wominor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_children where served_children == 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 16,
    "fields": {
      "name": "indv_child_total",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.served_children",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 17,
    "fields": {
      "name": "indv_total_hh_wminor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.(served_children + served_adults + served_seniors) where served_children > 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 18,
    "fields": {
      "name": "indv_total_hh_wominor",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.(served_children + served_adults + served_seniors) where served_children == 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 19,
    "fields": {
      "name": "indv_total",
      "definition_public": "addin_ohio",
      "calculation_notes": "Sum of fact_services.(served_children + served_adults + served_seniors)",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 20,
    "fields": {
      "name": "hh_wsenior",
      "definition_public": "addin_mid_ohio_foodbank",
      "calculation_notes": "Count of fact_services entries where served_seniors > 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 21,
    "fields": {
      "name": "hh_wosenior",
      "definition_public": "addin_mid_ohio_foodbank",
      "calculation_notes": "Count of fact_services entries where served_seniors == 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 22,
    "fields": {
      "name": "hh_grandparent",
      "definition_public": "addin_mid_ohio_foodbank",
      "calculation_notes": "Count of fact_services entries where served_seniors > 0 AND served_children > 0",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 23,
    "fields": {
      "name": "service_summary_service",
      "definition_public": "A summary of services by service type. Provides a detailed summary of network output by each type of service.",
      "calculation_notes": "Base services, group by service id, show count of services as duplicated families served, and sum of fact_services.served_total as duplicated people served.",
      "interpretation_notes": "Will not show any variables that have zero observations.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 24,
    "fields": {
      "name": "service_summary_category",
      "definition_public": "A summary of services by service cateogry. This provides a high-level summary of network output.",
      "calculation_notes": "Base services, group by service category name, show count of services as duplicated families served, and sum of fact_services.served_total as duplicated people served.",
      "interpretation_notes": "Will not show any variables that have zero observations.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 25,
    "fields": {
      "name": "distribution_outlets",
      "definition_public": "A summary of how many sites customers visited during the reporting timeframe.",
      "calculation_notes": "Base services, group by research_family_key, summarise sites visited as a count distinct of loc_id, group by sites visited, summarise unduplicated families as a count of observations.",
      "interpretation_notes": "Will not show any variables that have zero observations, recommend reporting clients summarize data as 1, 2, 3, 4, and 5+ sites visited.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 26,
    "fields": {
      "name": "fam_frequency_of_visits",
      "definition_public": "A summary of how many families received how many services in the timeframe.",
      "calculation_notes": "Base families, group by number of services, show count of unduplicated families in each group. Cap output at 25+.",
      "interpretation_notes": "The general insight is that grocery service data shows a large number of families receiving a few services, and a few families receiving large services. This trend has been shown across states, foodbanks, counties, and agencies for any annual timeframe.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 27,
    "fields": {
      "name": "fam_service_distribution",
      "definition_public": "A summary of how many total services were received by families in the timeframe.",
      "calculation_notes": "Base families, group by number of services, show sum of services received (unduplicated families * services) in each group. Cap output at 25+.",
      "interpretation_notes": "The general insight is that families who receive more services are fewer in number, and . E.g. if 3500 families receive 10 services each, the 10 group received 35000 services. This is likely fewer services received total than all the families who received 1 service, 2 services,etc...",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 28,
    "fields": {
      "name": "fam_household_composition",
      "definition_public": "Provides an unduplicated 7 category breakdown of family composition.",
      "calculation_notes": "Base families, group by family_composition_type, summarise unduplicated count of families.",
      "interpretation_notes": "A family household composition is derived from their most frequent household composition in ALL services received, not just the ones from the reporting timeframe.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 29,
    "fields": {
      "name": "fam_family_composition_key_insight",
      "definition_public": "Provides a high-level statistic about how many families contained at least one child and one senior.",
      "calculation_notes": "Base families, group by family_composition_type, summarise unduplicated count of families, group again by has_child_senior, summarise unduplicated count of families.",
      "interpretation_notes": "This is a powerful statistic and shows grocery services benefit many types of families, and most of them have at least one senior or child.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 30,
    "fields": {
      "name": "fam_household_size_distribution_1_10",
      "definition_public": "Provides a summary of family size, 1 - 10+",
      "calculation_notes": "Base families, round average family size, bring up any family size <1 to 1, group by family_size, summarise unduplicated count of families. Cap output at 10+.",
      "interpretation_notes": "One of the original myths about grocery services was that all families were large. The typical result of this data is that the majority of families are in line with the average demographics in their area.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 31,
    "fields": {
      "name": "fam_household_size_distribution_classic",
      "definition_public": "Provides a summary of family size, 1 - 3, 4 - 6, 7+",
      "calculation_notes": "Base families, round average family size, bring up any family size <1 to 1, group by family_size, summarise unduplicated count of families, summarise output at classic levels",
      "interpretation_notes": "One of the original myths about grocery services was that all families were large. The typical result of this data is that the majority of families are in line with the average demographics in their area. This is the classical breakdown of family size.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 32,
    "fields": {
      "name": "newfam_undup_hh_total",
      "definition_public": "Unduplicated count of new families.",
      "calculation_notes": "Base families, filter for first fact_service ocurring during timeframe, count number of families.",
      "interpretation_notes": "New families are determined based on their first recorded date of service, regardless of the fact_service's hierarchy or geography. For a family to be new, they just need to have had their first service in the reporting timeframe. This data point provides an unduplicated count of those families who interacted with the report scope & value.",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 33,
    "fields": {
      "name": "newmem_allfams_undup_indv_total",
      "definition_public": "Unduplicated count of new individuals in all families.",
      "calculation_notes": "Base members, filter for first fact_service ocurring during timeframe, count number of individuals.",
      "interpretation_notes": "New individuals are determined based on their first recorded date of service, regardless of their dim_families first day of service, or the fact_service's hierarchy or geography. For an individual to be new, they just need to have had their first fact_service_members entry in the reporting timeframe. This data point provides an unduplicated count of those indivuals who interacted with the report scope & value.",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 34,
    "fields": {
      "name": "newmem_oldfam_undup_indv_total",
      "definition_public": "Unduplicated count of new individuals in old families.",
      "calculation_notes": "Base members, filter for first fact_service_member entry occurring during timeframe, filter for first fact_service entry ocurring during timeframe, count number of individuals.",
      "interpretation_notes": "New individuals are determined based on their first recorded date of service, regardless of their dim_families first day of service, or the fact_service's hierarchy or geography. For an individual to be new, they just need to have had their first fact_service_members entry in the reporting timeframe. This data point provides an unduplicated count of new indivuals who were part of old families (not new during the timeframe).",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 35,
    "fields": {
      "name": "new_fam_services_total",
      "definition_public": "Services received by new families",
      "calculation_notes": "Base families, filter for first fact_service occuring during timeframe, sum total services.",
      "interpretation_notes": "The total number of services new families received that were provided within the report scope.",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 36,
    "fields": {
      "name": "global_first_services_total",
      "definition_public": "Total number of first time services.",
      "calculation_notes": "Base services, filter for first fact_service occuring during timeframe, count observations.",
      "interpretation_notes": "The number of first-time services received by families. These are the markers that allow us to identify new families, and are global in nature across the system. Use this information to understand how many new families the report scope interacted with.",
      "data_definition_type_id": 1
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 37,
    "fields": {
      "name": "new_fam_frequency_of_visits",
      "definition_public": "A summary of how many new families received how many services in the timeframe.",
      "calculation_notes": "Base families, filter for new families, group by number of services, show count of unduplicated families in each group. Cap output at 25+.",
      "interpretation_notes": "The general insight is that grocery service data shows a large number of families receiving a few services, and a few families receiving large services. This trend has been shown across states, foodbanks, counties, and agencies for any annual timeframe. Compare this data to the service distribution for all families to understand how it may be more difficult for new families to take full advantage of the network immediately upon starting to interact with it.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 38,
    "fields": {
      "name": "new_fam_service_distribution",
      "definition_public": "A summary of how many total services were received by new families in the timeframe.",
      "calculation_notes": "Base families, filter for first fact_service ocurring during timeframe, group by number of services, show sum of services received (unduplicated families * services) in each group. Cap output at 25+.",
      "interpretation_notes": "The general insight is that families who receive more services are fewer in number, and . E.g. if 3500 families receive 10 services each, the 10 group received 35000 services. This is likely fewer services received total than all the families who received 1 service, 2 services,etc... For new families, this is another example of how they may not be able to fully benefit from the network in ways that established families can access larger amounts of resources.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 39,
    "fields": {
      "name": "new_fam_household_composition",
      "definition_public": "Provides an unduplicated 7 category breakdown of family composition, for new families.",
      "calculation_notes": "Base families, filter for first fact_service ocurring during timeframe, group by family_composition_type, summarise unduplicated count of families.",
      "interpretation_notes": "A family household composition is derived from their most frequent household composition in ALL services received, not just the ones from the reporting timeframe. For new families this is likely to be a single value and more closely agrees with the family composition determinations in fact_services. Compare these breakdowns to all familes to gain insight into how the newest families you are serving differ from the established families you are serving.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 40,
    "fields": {
      "name": "new_fam_family_composition_key_insight",
      "definition_public": "Provides a high-level statistic about how many families contained at least one child and one senior, for new families.",
      "calculation_notes": "Base families, filter for first fact_service ocurring during timeframe, group by family_composition_type, summarise unduplicated count of families, group again by has_child_senior, summarise unduplicated count of families.",
      "interpretation_notes": "This is a powerful statistic and shows grocery services benefit many types of new families, and most of them have at least one senior or child. Expect this number to be more sensitive to changes in family composition than the general household composition insights.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 41,
    "fields": {
      "name": "new_fam_household_size_distribution_1_10",
      "definition_public": "Provides a summary of family size, 1 - 10+, for new families",
      "calculation_notes": "Base families, filter for first fact_service ocurring during timeframe, round average family size, bring up any family size <1 to 1, group by family_size, summarise unduplicated count of families. Cap output at 10+",
      "interpretation_notes": "One of the original myths about grocery services was that all families were large. The typical result of this data is that the majority of families are in line with the average demographics in their area. Look for differences as compared to the general family statistics for insights into hunger affecting families of different sizes.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 42,
    "fields": {
      "name": "new_fam_household_size_distribution_classic",
      "definition_public": "Provides a summary of family size, 1 - 3, 4 - 6, 7+, for new families",
      "calculation_notes": "Base families, filter for first fact_service ocurring during timeframe, round average family size, bring up any family size <1 to 1, group by family_size, summarise unduplicated count of families, summarise output at classic levels.",
      "interpretation_notes": "One of the original myths about grocery services was that all families were large. The typical result of this data is that the majority of families are in line with the average demographics in their area. This is the classical breakdown of family size. Look for differences as compared to the general family statistics for insights into hunger affecting families of different sizes.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 43,
    "fields": {
      "name": "relationship_length_families_mean",
      "definition_public": "Provides the mean length of time between all families' first service and most recent service.",
      "calculation_notes": "Base families, summarize for mean of max(fact_services.days_since_first_service)",
      "interpretation_notes": "Use this information to gain insight into how long families served in the report scope have been engaged with the feeding network.",
      "data_definition_type_id": 3
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 44,
    "fields": {
      "name": "relationship_length_families_distribution",
      "definition_public": "Provides the distribution of the length of time between all families' first service and most recent service.",
      "calculation_notes": "Base families, generate a distribution for fact_services.days_since_first_service",
      "interpretation_notes": "Use this information to gain insight into the distribution of families length of service.",
      "data_definition_type_id": 2   
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 45,
    "fields": {
      "name": "relationship_length_indv_mean",
      "definition_public": "Provides the mean length of time between all individuals' first service and most recent service.",
      "calculation_notes": "Base members, summarize for mean of max(fact_service_members.days_since_first_service)",
      "interpretation_notes": "Use this information to gain insight into how long individuals served in the report scope have been engaged with the feeding network.",
      "data_definition_type_id": 3
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 46,
    "fields": {
      "name": "relationship_length_indv_distribution",
      "definition_public": "Provides the distribution of the length of time between all individuals' first service and most recent service.",
      "calculation_notes": "Base members, generate a distribution for fact_service_members.days_since_first_service",
      "interpretation_notes": "Use this information to gain insight into the distribution of individals length of service.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 47,
    "fields": {
      "name": "dimgeo_coverage",
      "definition_public": "Coverage provides an estimate of how many families in the report scope have been enriched with geographic information.",
      "calculation_notes": "Base families, mutate summay of has_dim_geo_id, group by has_dim_geo_id, summarize count. State coverage as % of total.",
      "interpretation_notes": "Only valuable for hierarchy-based reports because for geography-based reports, only the covered data points are included.",
      "data_definition_type_id": 3
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 48,
    "fields": {
      "name": "geographic_breakdown_fam_state",
      "definition_public": "Provides a summary of how many families and individuals live in the geography, by state",
      "calculation_notes": "Base members, group by fips_state, summarise number of families as count distinct of research_family_key, count number of individuals",
      "interpretation_notes": "Use this information to gain an understanding about what state your families live in. Unknown geographies are for families we do not have geographic coverage for.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 49,
    "fields": {
      "name": "geographic_breakdown_fam_county",
      "definition_public": "Provides a summary of how many families and individuals live in the geography, by county",
      "calculation_notes": "Base members, group by fips_cnty, summarise number of families as count distinct of research_family_key, count number of individuals",
      "interpretation_notes": "Use this information to gain an understanding about what county your families live in. Unknown geographies are for families we do not have geographic coverage for.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 50,
    "fields": {
      "name": "geographic_breakdown_fam_zcta",
      "definition_public": "Provides a summary of how many families and individuals live in the geography, by zip code",
      "calculation_notes": "Base members, group by fips_zcta, summarise number of families as count distinct of research_family_key, count number of individuals",
      "interpretation_notes": "Use this information to gain an understanding about what zip code your families live in. Unknown geographies are for families we do not have geographic coverage for. Technically, this is for the ZCTA which is an official geography maintained by the census bureau. It is very similar to the USPS zip code, but less subject to changes.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 51,
    "fields": {
      "name": "services_flow_event_fips",
      "definition_public": "Summarizes the flow of services from the county of the point of service to the county of the famlies.",
      "calculation_notes": "Base services, group by dim_hierarchy_events.dimgeo_id.fips_cnty and fact_services.dimgeo_id.fips_cnty, summarize count of services.",
      "interpretation_notes": "Understand the flow of services from one county to another. Depending on the agency this may not be very interestesting as most agencies provide most of their service to families living in the same county. However, for analysis at higher levels (county, foodbank, geographies, etc...) or agencies serving multiple counties or in border areas, this information helps understand how families travel to receive service.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 52,
    "fields": {
      "name": "distance_traveled",
      "definition_public": "Summarizes the distances travelled to receive food, from the family's location to the agency's physical location.",
      "calculation_notes": "Base services, filter for dummy_trip == 1, mutate distance rollup, group by distance rollup, summarise count of services, mean distance, minimum distance, maximum distance.",
      "interpretation_notes": "Not all families are equally located near points of service. For urban areas, this is distribution typically shows the majority of visits happen within four miles. Many factors go into choosing sites for locations, when comparing geographies ones with a higher mean distance travelled may be good candiates for more local distributions or mobile outreach strategies.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 53,
    "fields": {
      "name": "direction_traveled",
      "definition_public": "Summarizes the direction travelled to receive food, from the family's location to the agency's physical location.",
      "calculation_notes": "Base services, filter for dummy_trip == 1, group by direction, summarise count of services, mean distance, minimum distance, maximum distance.",
      "interpretation_notes": "Not all families are equally located near points of service, and the directions they travel may be different too. If all direction categories were equal, it would mean the services provided were perfectly placed at the center of all possible customers. Typically, there will be one or two directions most customers travel to receive services.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 54,
    "fields": {
      "name": "windrose",
      "definition_public": "Combines distance and direction information into a visual to understand how individuals in certain areas travel different distances and directions to receive services.",
      "calculation_notes": "Base services, filter for dummy_trip == 1, mutate distance rollup, group by distance rollup and direction, summarise count of services, mean distance, minimum distance, maximum distance.",
      "interpretation_notes": "Not all families are equally located near points of service. Use the windrose to visualize where families travelled to receive services. When viewing this information for a geography report, the windrose centers nicely and shows the directions travelled to receive service (family's location -> agency's phyical location). When viewing this information for a hiearchy report, take care because the interpretation changes slightly. Be careful not to place the agency at the center of the windrose, rather, remember the data visualizes how the families travelled. If placing the agency at the center, the windrose's directions would be inverted to show where families came from.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 55,
    "fields": {
      "name": "sites_visited_distribution",
      "definition_public": "Shows how many sites within the reporting scope families accessed to secure the resources they need. Of most use for geography reporting.",
      "calculation_notes": "Base services, group by loc_id and research_family_key, summarize count of services per family. Provides a data set of 'family locations'. Group by research family key, summarize count of sites visits by family. Provides a dataset of sits visited per family. Group by sites visited, provides a frequency distribution of number of sites visited.",
      "interpretation_notes": "This information is only useful if your report scope is large enough to show visits to multiple sites. For Hierarchy reporting at the location, and event level - there will only be one location represented. However, for hierarchy reports at the organization, county, food bank, and state level, as well as all geography reporting, this information will be useful and gives insight into how many or how few different sites a family uses to secure the resources they need.",
      "data_definition_type_id": 2
    }
  },
  {
    "model": "api.DataDefinition",
    "pk": 56,
    "fields": {
      "name": "dummy_trip_coverage",
      "definition_public": "Dummy Trip Coverage provides a proportion of how many fact_services in the report scope have geographic information about the dim_family and dim_hierarchy_event.",
      "calculation_notes": "Base services, filter for dummy_trip == 1, count number of rows. Divide by total number of rows for base services.",
      "interpretation_notes": "This proportion tells you how much of the fact_services data is enriched appropriately for distances and direction calculations.",
      "data_definition_type_id": 3
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 1,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 1,
      "section_id": 1
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 2,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 2,
      "section_id": 1
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 3,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 3,
      "section_id": 1
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 4,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 4,
      "section_id": 1
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 5,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 5,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 6,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 6,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 7,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 7,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 8,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 8,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 9,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 9,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 10,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 10,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 11,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 11,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 12,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 12,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 13,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 13,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 14,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 14,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 15,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 15,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 16,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 16,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 17,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 17,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 18,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 18,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 19,
    "fields": {
      "report_dictionary_id": 2,
      "data_definition_id": 19,
      "section_id": 8
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 20,
    "fields": {
      "report_dictionary_id": 3,
      "data_definition_id": 20,
      "section_id": 9
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 21,
    "fields": {
      "report_dictionary_id": 3,
      "data_definition_id": 21,
      "section_id": 9
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 22,
    "fields": {
      "report_dictionary_id": 3,
      "data_definition_id": 7,
      "section_id": 9
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 23,
    "fields": {
      "report_dictionary_id": 3,
      "data_definition_id": 22,
      "section_id": 9
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 24,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 23,
      "section_id": 2
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 25,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 24,
      "section_id": 2
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 26,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 25,
      "section_id": 2
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 27,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 26,
      "section_id": 3
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 28,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 27,
      "section_id": 3
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 29,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 28,
      "section_id": 3
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 30,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 29,
      "section_id": 3
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 31,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 30,
      "section_id": 3
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 32,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 31,
      "section_id": 3
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 33,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 32,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 34,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 33,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 35,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 34,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 36,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 35,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 37,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 36,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 38,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 37,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 39,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 38,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 40,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 39,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 41,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 40,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 42,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 41,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 43,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 42,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 44,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 43,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 45,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 44,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 46,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 45,
      "section_id": 4
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 47,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 46,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 48,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 47,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 49,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 48,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 50,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 49,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 51,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 50,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 52,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 51,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 53,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 52,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 54,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 53,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 55,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 54,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 56,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 55,
      "section_id": 5
    }
  },
  {
    "model": "api.ReportingDictionaryDefinition",
    "pk": 57,
    "fields": {
      "report_dictionary_id": 1,
      "data_definition_id": 56,
      "section_id": 5
    }
  },
  {
    "model": "api.RunType",
    "pk": 1,
    "fields": {
      "name": "One Time"
    }
  },
  {
    "model": "api.RunType",
    "pk": 2,
    "fields": {
      "name": "Recurring"
    }
  },
  {
    "model":"api.TimeframeType",
    "pk":1,
    "fields":{
        "name" : "Last Month",
        "dim_dates_reference" : "NA",
        "recurrence_type": "Monthly"
    }
  },
  {
    "model":"api.TimeframeType",
    "pk":2,
    "fields":{
        "name" : "Rolling 12 Months",
        "dim_dates_reference" : "NA",
        "recurrence_type": "Monthly"
    }
  },
  {
    "model":"api.TimeframeType",
    "pk":3,
    "fields":{
        "name" : "CY To Date",
        "dim_dates_reference" : "CalendarYear",
        "recurrence_type": "Monthly"
    }
  },
  {
    "model":"api.TimeframeType",
    "pk":4,
    "fields":{
        "name" : "Fiscal year to date",
        "dim_dates_reference" : "JulFiscalYear",
        "recurrence_type": "Monthly"
    }
  },
  {
    "model":"api.TimeframeType",
    "pk":5,
    "fields":{
        "name" : "Custom Date Range",
        "dim_dates_reference" : "NA"
    }
  },
  {
    "model": "api.AddinManager",
    "pk": 1,
    "fields": {
      "name": "Ohio Addin",
      "reporting_dictionary_id": 2,
      "report_scope_id": 6,
      "report_scope_value": 39,
      "control_type_id" : 1
    }
  },
  {
    "model": "api.AddinManager",
    "pk": 2,
    "fields": {
      "name": "MOFC Addin",
      "reporting_dictionary_id": 3,
      "report_scope_id": 5,
      "report_scope_value": 21,
      "control_type_id" : 1
    }
  },
  {
    "model": "api.AddinManager",
    "pk": 3,
    "fields": {
      "name": "Virginia Addin",
      "reporting_dictionary_id": 4,
      "report_scope_id": 6,
      "report_scope_value": 51,
      "control_type_id" : 5
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 1,
    "fields": {
        "name": "Big Numbers",
        "reporting_dictionary_id": 1
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 2,
    "fields": {
        "name": "Service",
        "reporting_dictionary_id": 1
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 3,
    "fields": {
        "name": "Families",
        "reporting_dictionary_id": 1
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 4,
    "fields": {
        "name": "New Families",
        "reporting_dictionary_id": 1
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 5,
    "fields": {
        "name": "Geographic Origin",
        "reporting_dictionary_id": 1
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 6,
    "fields": {
        "name": "Family Members",
        "reporting_dictionary_id": 1
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 7,
    "fields": {
        "name": "Trends",
        "reporting_dictionary_id": 1
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 8,
    "fields": {
        "name": "Ohio Add-in",
        "reporting_dictionary_id": 2
    }
  },
  {
    "model": "api.ReportingDictionarySection",
    "pk": 9,
    "fields": {
        "name": "MOFC Add-in",
        "reporting_dictionary_id": 3
    }
  },
  {
    "model": "django_celery_beat.CrontabSchedule",
    "pk": 1,
    "fields": {
      "minute": 0,
      "hour": 3,
      "day_of_month": 5
    }
  },
  {
    "model": "django_celery_beat.CrontabSchedule",
    "pk": 2,
    "fields": {
      "minute": 0,
      "hour": 3,
      "day_of_week": 0
    }
  },
  {
    "model": "django_celery_beat.CrontabSchedule",
    "pk": 3,
    "fields": {
      "minute": 0,
      "hour": 3
    }
  },
  {
    "model": "django_celery_beat.PeriodicTask",
    "pk": 1,
    "fields": {
      "name": "Periodic Generation -- Monthly Recurrences",
      "task": "api.tasks.periodic_report_generation",
      "crontab_id": 1,
      "args": "Monthly",
      "date_changed": "2021-04-13 15:59:38.835719+00:00",
      "description": "Runs all report schedules that have a timeframe type whose recurrence is monthly. It runs according to the crontab schedule with pk 1 -- the fifth of every month, at 3 AM (UTC)."
    }
  },
  {
    "model": "django_celery_beat.PeriodicTask",
    "pk": 2,
    "fields": {
      "name": "Periodic Generation -- Weekly Recurrences",
      "task": "api.tasks.periodic_report_generation",
      "crontab_id": 2,
      "args": "Weekly",
      "date_changed": "2021-04-13 15:59:38.835719+00:00",
      "description": "Runs all report schedules that have a timeframe type whose recurrence is weekly. It runs according to the crontab schedule with pk 2 -- every Sunday at 3 AM (UTC)."
    }
  },
  {
    "model": "django_celery_beat.PeriodicTask",
    "pk": 3,
    "fields": {
      "name": "Periodic Generation -- Daily Recurrences",
      "task": "api.tasks.periodic_report_generation",
      "crontab_id": 3,
      "args": "Daily",
      "date_changed": "2021-04-13 15:59:38.835719+00:00",
      "description": "Runs all report schedules that have a timeframe type whose recurrence is daily. It runs according to the crontab schedule with pk 3 -- every day at 3 AM (UTC)."
    }
  }
]
